#include <ESP8266WiFi.h>
#include "DHT.h" 
#define DHTTYPE DHT11
#define dht_dpin 0  
int Raw = A0; 
int threshold = 16;
int Solenoid = 13;
const char* ssid = "Your SSID";
const char* password = "Your Wifi Password";
DHT dht(dht_dpin, DHTTYPE); 
WiFiServer server(80);
void setup(void)
{
 dht.begin();
 Serial.begin(9600);
 delay(10);
 pinMode(threshold,INPUT_PULLUP);
 pinMode(Solenoid, OUTPUT);
 digitalWrite(Solenoid, LOW);
 Serial.println();
 Serial.print("Connecting to ");
 Serial.println(ssid);
 WiFi.begin(ssid, password); 
while (WiFi.status() != WL_CONNECTED) {
   delay(500);
   Serial.print(".");
 }
 Serial.println("");
 Serial.println("WiFi connected");
 server.begin();
 Serial.println("Server started");
 Serial.print("Use this URL to connect: ");
 Serial.print("http://");
 Serial.print(WiFi.localIP());
 Serial.println("/");
}
void loop() {
 WiFiClient client = server.available();
 if (!client) {
  return;
}
Serial.println("new client");
 while(!client.available()){
   delay(1);
}
String request = client.readStringUntil('\r');
Serial.println(request);
client.flush();
float h =0.0;  //Humidity level
float t =0.0;  //Temperature in celsius 
float f =0.0;  //Temperature in fahrenheit
float percentage = 0.0; // Calculating percentage of moisture
float reading    = 0.0; //Analog channel moisture read

int value = LOW;
 if (request.indexOf("/Up=ON") != -1)  {
    h = dht.readHumidity(); 
    t = dht.readTemperature(); 
    f = (h * 1.8) + 32;
    reading = analogRead(Raw); 
    percentage = (reading/1024) * 100;   //Converting the raw value in percentage
   if (reading<=110){  // If less moisture in soil start the motor otherwise stop
   digitalWrite(Solenoid, HIGH);
   value = HIGH;
   }
   else {
   digitalWrite(Solenoid, LOW);
   value = LOW;
   }


}
 if (request.indexOf("/Solenoid=ON") != -1)  {   //Motor ON
  digitalWrite(Solenoid, HIGH);
  value = HIGH;
 }

if (request.indexOf("/Solenoid=OFF") != -1)  {  //Motor OFF
   digitalWrite(Solenoid, LOW);
   value = LOW;
}

 client.println("HTTP/1.1 200 OK");
 client.println("Content-Type: text/html");
 client.println(""); 
 client.println("<!DOCTYPE HTML>");
 client.println("<html>");
 client.println("<h1 align=center>Smart Garden - Weather Station</h1><br><br>");
 client.print("Temperature in Celsius =");
 client.println(t);
 client.println("<br>");
 client.print("Temperature in Fahrenheit =");
 client.println(f);
 client.println("<br>");
 client.print("Humidity =");
 client.println(h);
 client.print(" %");   
 client.println("<br>"); 
 client.println();
 client.print("Moisture Level Percentage =");
 client.print(percentage);
 client.print("%");
 if(digitalRead(threshold)==HIGH){ 
 client.println("Threshold Reached = Rain detected / Moisture exceeded / Water detected");
}
 client.println("<br><br>");
 if(value == HIGH) 
   client.println("Motor/Pump Operational");
  else 
   client.print("Motor/Pump at Halt");
 client.println("<br><br>");
 client.println("<a href=\"/Up=ON\"\"><button>Update = Temperature  Humidity Moisture Values</button></a><br />"); 
client.println("<a href=\"/Solenoid=ON\"\"><button>Motor Pump On </button></a>");
client.println("<a href=\"/Solenoid=OFF\"\"><button>Motor Pump Off </button></a><br />"); 
 client.println("</html>");
 delay(1);
 Serial.println("Client disconnected");
 Serial.println("");
}

